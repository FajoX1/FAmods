#   ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ
#   ‚ñà‚ñÄ‚ñë‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà

#   https://t.me/famods

# üîí    Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# ---------------------------------------------------------------------------------
# Name: BigMac
# Description: –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @BigMacMetreBot
# meta developer: @FAmods
# meta banner: https://github.com/FajoX1/FAmods/blob/main/assets/banners/bigmac.png?raw=true
# ---------------------------------------------------------------------------------

import hikkatl

import re
import random
import asyncio
import logging

from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class BigMac(loader.Module):
    """–ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @BigMacMetreBot"""

    strings = {
        "name": "BigMac",

        "checking_profile": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –°–º–æ—Ç—Ä—é –ø—Ä–æ—Ñ–∏–ª—å...</b>",
        "getting_top": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –°–º–æ—Ç—Ä—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...</b>",

        "e_on": "<emoji document_id=5239948040575393823>üçî</emoji> <b>–ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤–∫–ª—é—á–µ–Ω!</b>",
        "e_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤—ã–∫–ª—é—á–µ–Ω!</b>",
    }


    async def client_ready(self, client, db):
        self.db = db
        self._client = client

    async def _eat(self):
        while True:
            try:
                async with self._client.conversation("@BigMacMetreBot") as conv:
                    msg = await conv.send_message("/bigmac")
                    r = await conv.get_response()
                    await msg.delete()
                    await r.delete()
                break
            except hikkatl.errors.common.AlreadyInConversationError:
                await asyncio.sleep(5.67)

    async def _getprofme(self):
        while True:
            try:
                async with self._client.conversation("@BigMacMetreBot") as conv:
                    msg = await conv.send_message("/profile")
                    r = await conv.get_response()
                    await msg.delete()
                    await r.delete()
                    return f"""<b>{r.text}</b>"""

                break
            except hikkatl.errors.common.AlreadyInConversationError:
                await asyncio.sleep(5.67)

    async def _gettop(self):
        while True:
            try:
                async with self._client.conversation("@BigMacMetreBot") as conv:
                    msg = await conv.send_message("/top")
                    r = await conv.get_response()
                    await msg.delete()
                    await r.delete()
                    return f"<b>{r.text}</b>"
                break
            except hikkatl.errors.common.AlreadyInConversationError:
                await asyncio.sleep(5.67)

    @loader.command()
    async def bigmacs(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Ñ–∞—Ä–º"""

        if self.db.get(self.name, "eat_bigmac", False):
            self.db.set(self.name, "eat_bigmac", False)
            return await utils.answer(message, self.strings["e_off"])

        self.db.set(self.name, "eat_bigmac", True)

        await utils.answer(message, self.strings["e_on"])

        await self._eat()
        
    @loader.command()
    async def bp(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å"""

        await utils.answer(message, self.strings["checking_profile"])

        await utils.answer(message, await self._getprofme())

    @loader.command()
    async def btop(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø"""

        await utils.answer(message, self.strings["getting_top"])

        await utils.answer(message, await self._gettop())

    @loader.loop(interval=60*60, autostart=True)
    async def loop(self):
      if self.db.get(self.name, "eat_bigmac", False):
        await self._eat()
        await asyncio.sleep(random.randint(65, 90))
