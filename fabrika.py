#   ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ
#   ‚ñà‚ñÄ‚ñë‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà

#   https://t.me/famods

# üîí    Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# ---------------------------------------------------------------------------------
# Name: Fabrika
# Description: –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @fabrika
# meta developer: @FAmods
# meta banner: https://github.com/FajoX1/FAmods/blob/main/assets/banners/fabrika.png?raw=true
# ---------------------------------------------------------------------------------

import hikkatl

import random
import asyncio
import logging

from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class Fabrika(loader.Module):
    """–ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @fabrika"""

    strings = {
        "name": "Fabrika",

        "checking_profile": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –°–º–æ—Ç—Ä—é –ø—Ä–æ—Ñ–∏–ª—å...</b>",

        "searching_team": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –ü–æ–∏—Å–∫ –∫–æ–º–∞–Ω–¥—ã...</b>",
        "searching_id": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</b>",

        "no_usid": "<emoji document_id=5019523782004441717>üö´</emoji> <b>–ù—É–∂–Ω–æ <code>{}{} [–∞–π–¥–∏]</code></b>",

        "no_found_us": "<emoji document_id=5019523782004441717>üö´</emoji> <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>", 

        "rw_on": "<b><emoji document_id=5429633836684157942>‚ö°Ô∏è</emoji> –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—á–∏—Ö –≤–∫–ª—é—á–µ–Ω–∞!</b>",
        "rw_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—á–∏—Ö –≤—ã–∫–ª—é—á–µ–Ω–∞!</b>",

        "team_on": "<b><emoji document_id=5429633836684157942>‚ö°Ô∏è</emoji> –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞!</b>",
        "team_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞!</b>",

        "bonus_on": "<b><emoji document_id=5852779353330421386>üéÅ</emoji> –ê–≤—Ç–æ-–±–æ–Ω—É—Å –≤–∫–ª—é—á–µ–Ω!</b>",
        "bonus_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –ê–≤—Ç–æ-–±–æ–Ω—É—Å –≤—ã–∫–ª—é—á–µ–Ω!</b>",
    }


    async def client_ready(self, client, db):
        self.db = db
        self._client = client

        if self.db.get(self.name, "slaves_w", False):
           asyncio.create_task(self._slavesw())

        if self.db.get(self.name, "team", False):
           asyncio.create_task(self._teamw())

    async def _slavesw(self):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message("/factory")
            r = await conv.get_response()
            await r.click(1)
            r = await conv.get_edit()
            await r.click(0)
            await r.delete()
            await msg.delete()
            break
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _teamw(self):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message("/start")
            r = await conv.get_response()
            await r.click(5)
            r = await conv.get_edit()
            await asyncio.sleep(2.61)
            await r.click(3)
            r = await conv.get_edit()
            await asyncio.sleep(3.61)
            await r.click(0)
            await r.delete()
            await msg.delete()
            break
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _takebonus(self):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message("/city")
            r = await conv.get_response()
            await r.click(1)
            r = await conv.get_edit()
            await r.click(0)
            await r.delete()
            await msg.delete()
            break
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _getidfb(self, query):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message("/market")
            r = await conv.get_response()
            await r.click(0)
            msg = await conv.send_message(query)
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            await msg.delete()
            if r.text != "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω":
                return f"üìÅ {r.text}\n\n<b><a href='https://t.me/fabrika?start=su_{r.reply_markup.rows[5].buttons[0].query[4:]}'>üîó –°—Å—ã–ª–∫–∞</a></b>"
            return f"üö´ <b>{r.text}</b>"
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _getteamfb(self, query):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message(f"/start team_{query}")
            r = await conv.get_response()
            await r.delete()
            await msg.delete()
            if r.text != "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" and r.text != "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç":
                return f"{r.text}\n\n<b><a href='https://t.me/fabrika?start=team_{query}'>üîó –°—Å—ã–ª–∫–∞</a></b>"
            return f"üö´ <b>{r.text}</b>"
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _getprofme(self):
     while True:
      try:
        async with self._client.conversation("@fabrika") as conv:
            msg = await conv.send_message("/profile")
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            return f"üìÅ {r.text}\n\n<b><a href='https://t.me/fabrika?start=su_{r.reply_markup.rows[4].buttons[0].query[4:]}'>üîó –°—Å—ã–ª–∫–∞</a></b>"
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    @loader.command()
    async def fbrw(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–∞–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º"""

        if self.db.get(self.name, "slaves_w", False):
            self.db.set(self.name, "slaves_w", False)
            return await utils.answer(message, self.strings["rw_off"])

        self.db.set(self.name, "slaves_w", True)

        await utils.answer(message, self.strings["rw_on"])

        await self._slavesw()

    @loader.command()
    async def fbbonus(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å"""

        if self.db.get(self.name, "autobonus", False):
            self.db.set(self.name, "autobonus", False)
            return await utils.answer(message, self.strings["bonus_off"])

        self.db.set(self.name, "autobonus", True)

        await utils.answer(message, self.strings["bonus_on"])

        await self._takebonus()        

    @loader.command()
    async def fbteam(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—Å—è –Ω–∞ –∫–æ–º–∞–¥–Ω—É—é —Ä–∞–±–æ—Ç—É"""

        if self.db.get(self.name, "team", False):
            self.db.set(self.name, "team", False)
            return await utils.answer(message, self.strings["team_off"])

        self.db.set(self.name, "team", True)

        await utils.answer(message, self.strings["team_on"])

        await self._teamw()
    
    @loader.command()
    async def sprof(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å"""

        await utils.answer(message, self.strings["checking_profile"])

        await utils.answer(message, await self._getprofme())

    @loader.command()
    async def sidtg(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∞–π–¥–∏ –≤ —Ç–≥"""

        query = utils.get_args_raw(message)

        if not query:
            return await utils.answer(message, self.strings['no_usid'].format(self.get_prefix(), 'sidtg'))

        await utils.answer(message, self.strings["searching_id"])

        try:
            q = await self._client.inline_query("@fabrika", f"sup_{query}")
            await utils.answer(message, f"<b>üìÅ {q.result.results[0].send_message.message}\n\n<a href='{q.result.results[0].send_message.reply_markup.rows[1].buttons[0].url}'>üîó –°—Å—ã–ª–∫–∞</a></b>")
        except (IndexError, AttributeError):
            return await utils.answer(message, self.strings['no_found_us'])
        
    @loader.command()
    async def sidfb(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –∞–π–¥–∏ –≤ –±–æ—Ç–µ"""

        query = utils.get_args_raw(message)

        if not query:
            return await utils.answer(message, self.strings['no_usid'].format(self.get_prefix(), 'sidfb'))

        await utils.answer(message, self.strings["searching_id"])

        await utils.answer(message, await self._getidfb(query))

    @loader.command()
    async def steamfb(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ –∞–π–¥–∏"""

        query = utils.get_args_raw(message)

        if not query:
            return await utils.answer(message, self.strings['no_usid'].format(self.get_prefix(), 'steamfb'))

        await utils.answer(message, self.strings["searching_team"])

        await utils.answer(message, await self._getteamfb(query))

    @loader.loop(interval=60*60*24, autostart=True)
    async def loop(self):
      if self.db.get(self.name, "autobonus", False):
        await self._takebonus()
        await asyncio.sleep(random.randint(65, 90))

    async def watcher(self, event):
        chat = utils.get_chat_id(event)
        
        if chat != 6520131495:
            return
        
        if all(keyword in event.raw_text for keyword in ["–í–∞—à–∏ —Ä–∞–±–æ—á", "–∑–∞–∫–æ–Ω—á", "—Ä–∞–±–æ—Ç—É"]):
          if self.db.get(self.name, "slaves_w", False):
            await self._slavesw()
        if "–ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" in event.raw_text:
          if self.db.get(self.name, "team", False):
            await self._teamw()
