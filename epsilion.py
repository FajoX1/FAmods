#   ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ
#   ‚ñà‚ñÄ‚ñë‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà

#   https://t.me/famods

# üîí    Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# ---------------------------------------------------------------------------------
# Name: Epsilion
# Description: –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @EpsilionWarBot
# meta developer: @FAmods
# meta banner: https://github.com/FajoX1/FAmods/blob/main/assets/banners/epsilion.png?raw=true
# ---------------------------------------------------------------------------------

import hikkatl

import random
import asyncio
import logging

from telethon.tl.functions.channels import JoinChannelRequest

from .. import loader, utils

logger = logging.getLogger(__name__)

@loader.tds
class Epsilion(loader.Module):
    """–ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤ @EpsilionWarBot"""

    strings = {
        "name": "Epsilion",

        "checking_profile": "<b><emoji document_id=5424885441100782420>üëÄ</emoji> –°–º–æ—Ç—Ä—é –ø—Ä–æ—Ñ–∏–ª—å...</b>",

        "b_on": "<b><emoji document_id=5429633836684157942>‚ö°Ô∏è</emoji> –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤–∫–ª—é—á–µ–Ω!</b>",
        "b_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –ê–≤—Ç–æ-—Ñ–∞—Ä–º –≤—ã–∫–ª—é—á–µ–Ω!</b>",

        "bonus_on": "<b><emoji document_id=5429633836684157942>‚ö°Ô∏è</emoji> –ê–≤—Ç–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤–∫–ª—é—á–µ–Ω!</b>",
        "bonus_off": "<b><emoji document_id=5854929766146118183>üö´</emoji> –ê–≤—Ç–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å –≤—ã–∫–ª—é—á–µ–Ω!</b>",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "location",
                "‚òòÔ∏è –§–µ—Ä–º–µ—Ä—Å–∫–∏–µ —É–≥–æ–¥—å—è",
                lambda: "–õ–æ–∫–∞—Ü–∏—è –≤ –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –±—É–¥–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è. –ü—Ä–∏–º–µ—Ä: ‚òòÔ∏è –§–µ—Ä–º–µ—Ä—Å–∫–∏–µ —É–≥–æ–¥—å—è",
            ),
            loader.ConfigValue(
                "start_message",
                "üíñ –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                lambda: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –±–æ–π",
            ),
        )

    async def client_ready(self, client, db):
        self.db = db
        self._client = client

        # morisummermods feature
        try:
            channel = await self.client.get_entity("t.me/famods")
            await client(JoinChannelRequest(channel))
        except Exception:
            logger.error("Can't join @famods")

        if self.db.get(self.name, "battle", False):
           asyncio.create_task(self._battle())

    async def _change_location(self, conv, location):
     if location == "default":
        location = self.config['location']
     while True:
      try:
        msg = await self._client.send_message(776510403, "üó∫ –ö–∞—Ä—Ç–∞")
        r = await conv.get_response()
        await msg.delete()
        await r.delete()
        await asyncio.sleep(4.4324232432)
        msg = await self._client.send_message(776510403, location)
        r = await conv.get_response()
        r = await conv.get_response()
        await msg.delete()
        await r.delete()
        break
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _battle(self):
     self.cont = True
     while self.cont:
      try:
        async with self._client.conversation("@EpsilionWarBot") as conv:
            msg = await conv.send_message("‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤")
            r = await conv.get_response()
            await msg.delete()
            cavella = False
            cavella = True if not r.text == "üî≠ –ù–∞—á–∞–ª—Å—è –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞" else False
            if "‚ùóÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è —Å—Ä–∞–∂–µ–Ω–∏–π" in r.text:
               return
            if cavella:
                await self._change_location(conv, "default")
                msg = await conv.send_message("‚öîÔ∏è –ù–∞–π—Ç–∏ –≤—Ä–∞–≥–æ–≤")
                r = await conv.get_response()
                await msg.delete()
            while self.cont:
                r = await conv.get_response()
                pr = []
                for b in r.reply_markup.rows:
                   for bu in b.buttons:
                    if all(x not in bu.text for x in ["–°–±–µ–∂–∞—Ç—å", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "(", ")", "[", "]"]):
                        pr.append(bu.text)
                msg = await conv.send_message(random.choice(pr))
                r = await conv.get_response()
                if not "–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å?" in r.text:
                    if "–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ" in r.text:
                        await conv.send_message("üíÄ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç—å")
                    if "–¢—ã –ø–æ–±–µ–¥–∏–ª" in r.text:
                        await conv.send_message("‚úÖ –ó–∞–±—Ä–∞—Ç—å –Ωa–≥—Ä–∞–¥—É")
                    self.cont = False
                    return
                await asyncio.sleep(3.54354353)
                pr = []
                for b in r.reply_markup.rows:
                   for bu in b.buttons:
                    if all(x not in bu.text for x in ["–°–±–µ–∂–∞—Ç—å", "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "(", ")", "[", "]"]):
                        pr.append(bu.text)
                msg = await conv.send_message(random.choice(pr))
                r = await conv.get_response()
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _bonus(self):
     self.cont = True
     while self.cont:
      try:
        async with self._client.conversation("@EpsilionWarBot") as conv:
            msg = await conv.send_message("üìü –ú–µ–Ω—é")
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            msg = await self._client.send_message(776510403, "üéÅ –ù–∞–≥—Ä–∞–¥—ã")
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            msg = await self._client.send_message(776510403, "üßÅ  –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞")
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            break
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    async def _getprofme(self):
     while True:
      try:
        async with self._client.conversation("@EpsilionWarBot") as conv:
            msg = await conv.send_message("/equip")
            r = await conv.get_response()
            await msg.delete()
            await r.delete()
            return f"<b>üìÅ –ü—Ä–æ—Ñ–∏–ª—å</b>\n\n{r.text}"
      except hikkatl.errors.common.AlreadyInConversationError:
          await asyncio.sleep(5.67)

    @loader.command()
    async def eps(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Ñ–∞—Ä–º"""

        if self.db.get(self.name, "battle", False):
            self.cont = False
            self.db.set(self.name, "battle", False)
            return await utils.answer(message, self.strings["b_off"])

        self.db.set(self.name, "battle", True)

        await utils.answer(message, self.strings["b_on"])

        await self._battle()

    @loader.command()
    async def epb(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å"""

        if self.db.get(self.name, "everyday_bonus", False):
            self.db.set(self.name, "everyday_bonus", False)
            return await utils.answer(message, self.strings["bonus_off"])

        self.db.set(self.name, "everyday_bonus", True)

        await utils.answer(message, self.strings["bonus_on"])

        await self._bonus()
        
    @loader.command()
    async def epp(self, message):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å"""

        await utils.answer(message, self.strings["checking_profile"])

        await utils.answer(message, await self._getprofme())

    @loader.loop(interval=60*60*24, autostart=True)
    async def loop(self):
      if self.db.get(self.name, "everyday_bonus", False):
        await self._bonus()
        await asyncio.sleep(random.randint(65, 90))

    async def watcher(self, event):
        chat = utils.get_chat_id(event)
        
        if chat != 776510403:
            return
        
        if event.raw_text == self.config['start_message']:
            if self.db.get(self.name, "battle", False):
                await asyncio.sleep(random.randint(3, 5))
                asyncio.create_task(await self._battle())

        if all(keyword in event.raw_text for keyword in ["–¢–µ–±—è —É–±–∏–ª"]):
            self.cont = False
            await self._client.send_message(776510403, "üíÄ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç—å")
        
        if all(keyword in event.raw_text for keyword in ["—É—Å–ø–µ–ª –æ—Ç —Ç–µ–±—è —Å–±–µ–∂–∞—Ç—å", "–¢—ã –ø–æ–±–µ–¥–∏–ª", "—É–±–∏–≤–∞–µ—Ç", "–æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ—Ä–æ–¥ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"]):
            self.cont = False
            await self._client.send_message(776510403, "‚úÖ –ó–∞–±—Ä–∞—Ç—å –Ωa–≥—Ä–∞–¥—É")